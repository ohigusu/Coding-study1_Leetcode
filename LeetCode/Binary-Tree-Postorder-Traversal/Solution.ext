# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def postorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        result,stack1,stack2=[],[root],[]
        if root is None: return
        while stack1:
            node = stack1.pop()
            stack2.append(node.val)
            if node.left:stack1.append(node.left)
            if node.right:stack1.append(node.right)
        while stack2:
            result.append(stack2.pop())
        return result
        